name: Deploy to AWS Amplify

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, reopened ]

# Evitar mÃºltiples deploys simultÃ¡neos
concurrency:
  group: amplify-deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  pull-requests: read

env:
  AWS_REGION: us-east-1
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-
        
    - name: Install dependencies
      run: bun install --frozen-lockfile
      
    - name: Build project
      run: bun run build
      env:
        NEXT_PUBLIC_APP_URL: ${{ secrets.AMPLIFY_APP_URL }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: GitHubActions-${{ github.run_id }}
        
    - name: Deploy to Amplify
      run: |
        # Cancelar jobs pendientes
        PENDING_JOBS=$(aws amplify list-jobs \
          --app-id ${{ secrets.AMPLIFY_APP_ID }} \
          --branch-name master \
          --max-results 5 \
          --query 'jobSummaries[?status==`PENDING`].jobId' \
          --output text)
        
        if [ ! -z "$PENDING_JOBS" ]; then
          echo "Cancelling pending jobs: $PENDING_JOBS"
          for job_id in $PENDING_JOBS; do
            aws amplify stop-job \
              --app-id ${{ secrets.AMPLIFY_APP_ID }} \
              --branch-name master \
              --job-id $job_id || true
          done
        fi
        
        # Iniciar nuevo build
        aws amplify start-job \
          --app-id ${{ secrets.AMPLIFY_APP_ID }} \
          --branch-name master \
          --job-type RELEASE
          
        echo "âœ… Deployment started!"
        echo "ðŸš€ App URL: ${{ secrets.AMPLIFY_APP_URL }}"
        
    - name: Cleanup
      if: always()
      run: |
        rm -f deploy.zip
        rm -f amplify-policy.json
        rm -f github-trust-policy.json
